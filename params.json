{"name":"node-stormondemand","tagline":"Node.js client bindings for the StormOnDemand API","body":"node-stormondemand\r\n=============\r\n\r\nNode.js client bindings for the StormOnDemand API.  These are fairly barebones at\r\nthe moment and simply provide an easy one-to-one mapping for API methods to Javascript\r\nfunctions.\r\n\r\nDocumentation for the API can be found at: https://www.stormondemand.com/api/\r\n\r\nTo install:\r\n\r\n```\r\nnpm install stormondemand\r\n```\r\n\r\nHow to use this client:\r\n\r\n```\r\nvar stormAPI = require('stormondemand');\r\nvar client   = new stormAPI({ username: \"<fill-me-in>\", password: \"<fill-me-in>\" });\r\n\r\n// Get my account history\r\nclient.Notifications.all({}, function (res) {\r\n\tfor (var i=0; i<res.page_size; i++) {\r\n\t\tconsole.log(res.items[i]);\r\n\t}\r\n});\r\n\r\n// Create an actual Storm server\r\nclient.Storm.Server.create({\r\n\tconfig_id: 2,\r\n\ttemplate: 'CENTOS_62_CPANEL',\r\n\tdomain: 'my.storm-server.fake'\r\n}, function (res) {\r\n\tconsole.log(res);\r\n});\r\n```\r\n\r\nThis client is programmatically generated from current API documentation.  In order to regenerate\r\nthe client library for new methods, it's extremely simple.  It requires an additional installation\r\nof the mustache templating engine.  With that installed, it's a simple process to regenerate\r\nthe client:\r\n\r\n```\r\nnpm install mustache\r\ncd node-stormondemand\r\nnode lib/generate.js\r\n```\r\n\r\nThis will download the current documentation, and regenerate index.js with all the current\r\nAPI methods.\r\n\r\nFor testing, we use nodeunit.  For more information on installing and setting up nodeunit,\r\nplease refer to https://github.com/caolan/nodeunit\r\n\r\nGiven that being able to actually test the API requires valid API credentials, those can be\r\nset in two ways.  First, you can create a .stormondemand.json file in your HOME folder.\r\n\r\n```\r\n{\r\n\t\"username\": \"<fill-me-in>\",\r\n\t\"password\": \"<fill-me-in>\"\r\n}\r\n```\r\n\r\nThe tests will pick this file up and use it for the parameters to creating the API client.\r\n\r\nAlternatively, you can set environment variables:\r\n\r\n```\r\nexport STORMONDEMAND_USERNAME='<fill-me-in>'\r\nexport STORMONDEMAND_PASSWORD='<fill-me-in>'\r\n```\r\n\r\nTo run the tests:\r\n\r\n```\r\ncd node-stormondemand\r\nnodeunit .\r\n```\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}